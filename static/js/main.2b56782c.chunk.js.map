{"version":3,"sources":["components/ImageGalleryItem/styles.module.scss","components/Button/styles.module.scss","components/ImageGallery/styles.module.scss","components/Spinner/styles.module.scss","components/Searchbar/styles.module.scss","components/Searchbar/Searchbar.tsx","components/Modal/Modal.tsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.tsx","components/ImageGallery/ImageGallery.tsx","components/Spinner/Spinner.jsx","server-api/server.js","App.tsx","index.tsx","components/Modal/styles.module.scss"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","event","preventDefault","SearchForm","type","SearchButton","SearchFormLabel","value","onChange","target","SearchFormInput","autoComplete","autoFocus","placeholder","Modal","onClose","largeImageURL","alt","Overlay","onClick","src","ImageGalleryItem","webformatURL","tags","clickImg","onOpenModal","data-source","ImageGalleryItem__image","Button","container","button","ImageGallery","hits","onLoadMore","map","id","length","Spinner","color","height","width","axios","defaults","baseURL","fetchGallery","searchQuery","pageNumber","get","then","res","data","catch","err","console","log","App","setHits","currentPage","setCurrentPage","setSearchQuery","setLargeImageURL","showModal","setShowModal","isLoading","setIsLoading","setError","useEffect","prev","window","scrollTo","top","document","documentElement","scrollHeight","behavior","message","finally","toggleModal","e","dataset","source","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b56782c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"styles_ImageGalleryItem__hNT04\",\"ImageGalleryItem__image\":\"styles_ImageGalleryItem__image__2BeeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2ozJ4\",\"button\":\"styles_button__12U2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"styles_ImageGallery__c0E9u\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__24rtM\",\"GalleryItemImage\":\"styles_GalleryItemImage__2Prxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"styles_Spinner__-QfTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"styles_Searchbar__1YSZ_\",\"SearchForm\":\"styles_SearchForm__1gqPL\",\"SearchButton\":\"styles_SearchButton__2EKp2\",\"SearchFormLabel\":\"styles_SearchFormLabel__3iWsp\",\"SearchFormInput\":\"styles_SearchFormInput__8bqIw\"};","import {useState} from 'react';\nimport styles from './styles.module.scss'\n\ntype SearchBarType = {\n  onSubmit(searchQuery: string):void\n}\n\nconst Searchbar = ({onSubmit}:SearchBarType) =>{\n\n  const [query, setQuery] = useState('')\n\n   const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setQuery(event.target.value)\n    }\n\n   const handleSubmit = (event:React.FormEvent<HTMLFormElement> ) => {\n        event.preventDefault()\n\n        onSubmit(query)\n        setQuery('')\n    }\n\n        return <header className={styles.Searchbar}>\n        <form onSubmit={handleSubmit} className={styles.SearchForm}>\n          <button type=\"submit\" className={styles.SearchButton}>\n          <span className={styles.SearchFormLabel}>Search</span>\n          </button>\n      \n          <input\n          value ={query} onChange={handleChange}\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n      \n    }\n\nexport default Searchbar;","import styles from './styles.module.scss'\n\ninterface IModal {\n    largeImageURL:string\n    alt:string\n    onClose():void\n}\n\nconst Modal = ({onClose, largeImageURL, alt}:IModal) => {\n\n//    const handleKeyDown = event => {\n//         if(event.key === 'Escape'){\n//             onClose();\n//         }\n//     }\n\n   const handleOverlayClick = (event:React.MouseEvent<HTMLDivElement>) => {\n        if(event.target === event.target){\n            onClose();\n        }\n    }\n\n        return (<div className={styles.Overlay} onClick={handleOverlayClick} >\n            <div className={styles.Modal}> \n              <img src={largeImageURL} alt={alt} />\n            </div>\n          </div>) \n}\n\nexport default Modal;","import styles from './styles.module.scss'\n\nexport default function ImageGalleryItem({ webformatURL, largeImageURL, tags, clickImg, onOpenModal}) {\n\n    return (\n      <li className={styles.ImageGalleryItem }>\n        <img\n          src={webformatURL}\n          alt={tags}\n          data-source={largeImageURL}\n          className={styles.ImageGalleryItem__image}\n          onClick={clickImg}\n        />\n      </li>\n    );\n  }","import styles from './styles.module.scss'\n\ntype ButtotType = {\n  onClick(event:React.MouseEvent<HTMLButtonElement>):void\n}\n\nconst Button = ({onClick}:ButtotType) => {\n   return(<div className={styles.container}><button className={styles.button}type=\"button\" onClick={onClick}>\n   Load more\n  </button></div>)\n}\n\n\nexport default Button;","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\nimport Button from '../Button'\nimport styles from './styles.module.scss'\nimport {IHits, IEvent} from '../../interfaces/interface'\n\n\n// interface IHits {\n//   id: string\n//   webformatURL:string\n//   largeImageURL: string\n//   tags: string\n// }\n\n// interface IEvent{\n//   target: {\n//       dataset: {\n//           source: string;\n//       };\n//   };\n// }\n\ninterface IImageGallary{\n  hits: IHits[]\n  clickImg(e:IEvent, showModal:boolean):void\n  onLoadMore(event: React.MouseEvent<HTMLButtonElement>):void\n  onOpenModal():void\n}\n\nconst ImageGallery = ({ hits, clickImg, onLoadMore, onOpenModal}:IImageGallary) => {\n    return( \n      <>\n       <ul className={styles.ImageGallery}>\n        {hits.map(({ id, webformatURL, tags, largeImageURL }) => (\n          <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n          clickImg={clickImg}\n          onOpenModal={onOpenModal}\n        />\n        ))}\n      </ul>\n      {hits.length > 0 && <Button onClick={onLoadMore} />}\n      </>\n) \n}\n\n\nexport default ImageGallery;","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './styles.module.scss'\n\nfunction Spinner() {\n  return(<Loader className={styles.Spinner} type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n)}  \n\nexport default Spinner;","import axios from 'axios';\n\nconst AUTH_TOKEN = '2778632-0d9f36dba3e3cb8ecea612bcf';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nconst fetchGallery = (searchQuery, pageNumber) => {\n  return axios\n    .get(\n      `/?key=${AUTH_TOKEN}&q=${searchQuery}&page=${pageNumber}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(res => res.data.hits)\n    .catch(err => console.log(err));\n};\n\nexport default fetchGallery;\n","import { SetStateAction, useEffect, useState } from 'react';\nimport Searchbar from './components/Searchbar';\nimport Modal from './components/Modal';\nimport ImageGallery from './components/ImageGallery';\nimport Spinner from './components/Spinner';\nimport fetchGallery from './server-api/server';\nimport {IHits, IEvent} from './interfaces/interface'\n\n// interface IHits {\n//   id: string\n//   webformatURL:string\n//   largeImageURL: string\n//   tags: string\n// }\n\n// interface IEvent{\n//     target: {\n//         dataset: {\n//             source: string;\n//         };\n//     };\n// }\n\nconst App = () => {\n  const [hits, setHits] = useState<IHits[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [largeImageURL, setLargeImageURL] = useState<string>('');\n  const [alt, setAlt] = useState<string>('');\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    setIsLoading(true);\n\n    fetchGallery(searchQuery, currentPage)\n      .then(data => setHits(prev => [...prev, ...data]))\n      .then(() => {\n        if (currentPage > 1)\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n      })\n      .catch(err => setError(err.message))\n      .finally(() => setIsLoading(false));\n  }, [searchQuery, currentPage]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    setIsLoading(true);\n    setHits([]);\n  }, [searchQuery]);\n\n  const onChangeQuery = (searchQuery: string) => {\n    setSearchQuery(searchQuery);\n  };\n\n  // * Modal\n  const clickImg = (e: IEvent) => {\n    setLargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n\n  /**\n   * * Пропс для кнопки*/\n\n  const onLoadMore = () => {\n    setCurrentPage(currentPage + 1);\n  };\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n      {isLoading && <Spinner />}\n      <ImageGallery\n        hits={hits}\n        clickImg={clickImg}\n        onLoadMore={onLoadMore}\n        onOpenModal={toggleModal}\n      />\n      {showModal && (\n        <Modal onClose={toggleModal} largeImageURL={largeImageURL} alt={alt} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"styles_Overlay__1uiky\",\"Modal\":\"styles_Modal__1cXlj\"};"],"sourceRoot":""}